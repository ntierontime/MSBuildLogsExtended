@using UrlStringsAlias = MSBuildLogsExtended.AspNetMvc50Rasor.Helpers.UrlStrings;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Linq.Expressions;
@using System.Web.Mvc;
@using System.Web.Mvc.Html;
@using System.Web.Routing;
@using Framework.Mvc;
@using PagedList.Mvc;
@model MSBuildLogsExtended.AspNetMvc40ViewModel.WPUpdateNameOnlyOfBuildVM
@{
    RouteValueDictionary queryStringDictionary = new RouteValueDictionary(Request.QueryString.AllKeys.ToDictionary(key => key, key => (object)Request.QueryString[key]));
}
<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 style="display: inline;">
                @MSBuildLogsExtended.Resources.UIStringResourcePerEntityBuild.Build
            </h3>
		</div>
@if (Model.StatusOfMasterEntity == Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.UIProcessReady)
{ // EditItem
	using (Html.BeginForm())
	{
        <div class="panel-body">
<div class="form-group">
			@Html.LabelFor(model => model.MasterEntity.Id, new { @class = "control-label" })
			@Html.DisplayFor(model => model.MasterEntity.Id)
    </div>
<div class="form-group">
			@Html.LabelFor(model => model.MasterEntity.Name, new { @class = "control-label" })
			@Html.TextBoxFor(model => model.MasterEntity.Name, new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.MasterEntity.Name, null, new { @class = "text-danger" })
    </div>
		</div>
<div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
    <button class="btn btn-default" role="button" type="submit" name="SaveButtonGroupBottom">
        <span class="glyphicon glyphicon-save"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resources.UIStringResource.SaveAlternativeText</span>
    </button>
</div>
<div class="btn-group">
    <a href="@Url.Action(UrlStringsAlias.ActionName_Build_Edit, UrlStringsAlias.ControllerName_Build, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = Model.MasterEntity.Id })'" class="btn btn-default" role="button" type="button" name="RefreshWhenEditButtonGroupBottom">
        <span class="glyphicon glyphicon-refresh"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resources.UIStringResource.RefreshAlternativeText</span>
    </a>
</div>
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Build_Index, UrlStringsAlias.ControllerName_Build)" class="btn btn-default" role="button" type="button" name="GotoSearchButtonGroupBottom">
		<span class="glyphicon glyphicon-search"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resources.UIStringResource.GotoSearchAlternativeText</span>
	</a>
</div>
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Build_WPEntityRelatedOfBuild, UrlStringsAlias.ControllerName_Build, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = Model.MasterEntity.Id })" class="btn btn-default" role="button" type="button" name="FullDetailsButtonGroupBottom">
		<span class="glyphicon glyphicon-briefcase"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resources.UIStringResource.FullDetailsAlternativeText</span>
	</a>
</div>
</div>
	}
}
@if (Model.StatusOfMasterEntity == Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.MessageOK)
{ // Item
        <div class="panel-body">
<div class="form-group">
			@Html.LabelFor(model => model.MasterEntity.Id, new { @class = "control-label" })
        <div class="form-control">
			@Html.DisplayFor(model => model.MasterEntity.Id)
        </div>
    </div>
<div class="form-group">
			@Html.LabelFor(model => model.MasterEntity.Name, new { @class = "control-label" })
        <div class="form-control">
			@Html.DisplayFor(model => model.MasterEntity.Name)
        </div>
    </div>
        </div>
<div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Build_Index, UrlStringsAlias.ControllerName_Build)" class="btn btn-default" role="button" type="button" name="GotoSearchButtonGroupBottom">
		<span class="glyphicon glyphicon-search"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resources.UIStringResource.GotoSearchAlternativeText</span>
	</a>
</div>
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Build_WPEntityRelatedOfBuild, UrlStringsAlias.ControllerName_Build, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = Model.MasterEntity.Id })" class="btn btn-default" role="button" type="button" name="FullDetailsButtonGroupBottom">
		<span class="glyphicon glyphicon-briefcase"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resources.UIStringResource.FullDetailsAlternativeText</span>
	</a>
</div>
</div>
}
@if (Model.StatusOfMasterEntity != Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.UIProcessReady && Model.StatusOfMasterEntity != Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.MessageOK)
{
<div class="text-danger">@Model.StatusMessageOfMasterEntity</div>
<div class="btn-group btn-group-justified" role="group" aria-label="...">
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Build_Index, UrlStringsAlias.ControllerName_Build)" class="btn btn-default" role="button" type="button" name="GotoSearchButtonGroupBottom">
		<span class="glyphicon glyphicon-search"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resources.UIStringResource.GotoSearchAlternativeText</span>
	</a>
</div>
<div class="btn-group">
	<a href="@Url.Action(UrlStringsAlias.ActionName_Build_WPEntityRelatedOfBuild, UrlStringsAlias.ControllerName_Build, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = Model.MasterEntity.Id })" class="btn btn-default" role="button" type="button" name="FullDetailsButtonGroupBottom">
		<span class="glyphicon glyphicon-briefcase"></span><span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">@Framework.Resources.UIStringResource.FullDetailsAlternativeText</span>
	</a>
</div>
</div>
}
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready($(function() {
        }));
        $(document).ready($(function() {
            $.validator.addMethod(
                "date",
                function(value, element) {
                    var bits = value.match(/([0-9]+)/gi), str;
                    if (!bits)
                        return this.optional(element) || false;
                    str = bits[1] + '/' + bits[0] + '/' + bits[2];
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(str));
                },
                "Please enter a date in the format dd/mm/yyyy"
            );
            $("form").validate({
                onkeyup: false,
                errorPlacement: function(error, element) {
                    if (element.attr("name").indexOf("DOB") >= 0) {
                        error.insertAfter("#DOB_Day");
                    } else {
                        error.insertAfter(element);
                    }
                },
                rules: {
                },
                messages: {
                },
                highlight:
                    function(element) {
                        $(element).css('border', '2px solid red');
                    },
                unhighlight:
                    function(element) {
                        $(element).css('border', '1px solid rgb(170, 170, 170)');
                    },
                errorLabelContainer: "#ErrorList",
                wrapper: "li",
            });
        }));
        //cascaded dropdownlist by knockoutjs
        function CascadingDDLViewModel() {
            var self = this;
        }
        var objVM = new CascadingDDLViewModel();
        ko.applyBindings(objVM);
    </script>
}
