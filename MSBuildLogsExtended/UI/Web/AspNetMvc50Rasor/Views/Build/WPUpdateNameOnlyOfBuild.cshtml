@using UrlStringsAlias = MSBuildLogsExtended.AspNetMvc50Rasor.Helpers.UrlStrings;
@using Framework.Mvc;
@model MSBuildLogsExtended.AspNetMvc40ViewModel.WPUpdateNameOnlyOfBuildVM
@{
    // http://www.asp.net/mvc/overview/getting-started/getting-started-with-ef-using-mvc/sorting-filtering-and-paging-with-the-entity-framework-in-an-asp-net-mvc-application
    // http://dotnetmentors.com/mvc/paging-and-sorting-in-asp-net-mvc-and-entity-framework-application.aspx
    ViewBag.Title = MSBuildLogsExtended.Resources.UIStringResourcePerEntityBuild.Build;
    RouteValueDictionary queryStringDictionary = new RouteValueDictionary(Request.QueryString.AllKeys.ToDictionary(key => key, key => (object)Request.QueryString[key]));
}
@section featured {
<div class="row">
    <div class="col-xs-12">
        <div class="page-header">
			<h1>@ViewBag.Title.<small>@ViewBag.Message</small></h1>
        </div>
    </div>
</div>
}
<article>
<div>
@if (Model.StatusOfMasterEntity == Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.UIProcessReady)
{ // EditItem
	@using (Html.BeginForm())
	{
<div class="form-group form-inline">
			@Html.LabelFor(model => model.MasterEntity.Id, new { @class = "control-label" })
			@Html.DisplayFor(model => model.MasterEntity.Id)
    </div>
<div class="form-group form-inline">
			@Html.LabelFor(model => model.MasterEntity.Name, new { @class = "control-label" })
			@Html.TextBoxFor(model => model.MasterEntity.Name, new { @class = "form-control" })
    </div>
		<input class="btn btn-default btn-Save" type="submit" name="SaveToolBarBottom" value="@Framework.Resources.UIStringResource.SaveAlternativeText" />
		<input onclick="location.href='@Url.Action(UrlStringsAlias.ActionName_Build_Index, UrlStringsAlias.ControllerName_Build)'" class="btn btn-default btn-GotoSearch" role="button" type="button" name="GotoSearchToolBarBottom" value="@Framework.Resources.UIStringResource.GotoSearchAlternativeText" />
<input onclick="location.href='@Url.Action(UrlStringsAlias.ActionName_Build_WPEntityRelatedOfBuild, UrlStringsAlias.ControllerName_Build, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = Model.MasterEntity.Id })'" class="btn btn-default btn-FullDetails" role="button" type="button" name="DetailsToolBarBottom" value="@Framework.Resources.UIStringResource.DetailsAlternativeText" />
	}
}
@if (Model.StatusOfMasterEntity == Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.MessageOK)
{ // Item
<div class="form-group form-inline">
			@Html.LabelFor(model => model.MasterEntity.Id, new { @class = "control-label" })
        <div class="form-control">
			@Html.DisplayFor(model => model.MasterEntity.Id)
        </div>
    </div>
<div class="form-group form-inline">
			@Html.LabelFor(model => model.MasterEntity.Name, new { @class = "control-label" })
        <div class="form-control">
			@Html.DisplayFor(model => model.MasterEntity.Name)
        </div>
    </div>
		<input onclick="location.href='@Url.Action(UrlStringsAlias.ActionName_Build_Index, UrlStringsAlias.ControllerName_Build)'" class="btn btn-default btn-GotoSearch" role="button" type="button" name="GotoSearchToolBarBottom" value="@Framework.Resources.UIStringResource.GotoSearchAlternativeText" />
<input onclick="location.href='@Url.Action(UrlStringsAlias.ActionName_Build_WPEntityRelatedOfBuild, UrlStringsAlias.ControllerName_Build, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = Model.MasterEntity.Id })'" class="btn btn-default btn-FullDetails" role="button" type="button" name="DetailsToolBarBottom" value="@Framework.Resources.UIStringResource.DetailsAlternativeText" />
}
@if (Model.StatusOfMasterEntity != Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.UIProcessReady && Model.StatusOfMasterEntity != Framework.CommonBLLEntities.BusinessLogicLayerResponseStatus.MessageOK)
{
<div class="error-label">@Model.StatusMessageOfMasterEntity</div>
		<input onclick="location.href='@Url.Action(UrlStringsAlias.ActionName_Build_Index, UrlStringsAlias.ControllerName_Build)'" class="btn btn-default btn-GotoSearch" role="button" type="button" name="GotoSearchToolBarBottom" value="@Framework.Resources.UIStringResource.GotoSearchAlternativeText" />
<input onclick="location.href='@Url.Action(UrlStringsAlias.ActionName_Build_WPEntityRelatedOfBuild, UrlStringsAlias.ControllerName_Build, new { isToCompareIdByIdentifierOftOfByIdentifier=true, valueToCompareIdByIdentifierOftOfByIdentifier = Model.MasterEntity.Id })'" class="btn btn-default btn-FullDetails" role="button" type="button" name="DetailsToolBarBottom" value="@Framework.Resources.UIStringResource.DetailsAlternativeText" />
}
</div>
</article>
@section Scripts {
    <script type="text/javascript">
        //http://www.softfinity.com/blog/using-ajax-with-knockout-js-and-asp-net-mvc-4-to-load-select-drop-down-options/
        $(document).ready($(function() {
        }));
        $(document).ready($(function() {
            $.validator.addMethod(
                "date",
                function(value, element) {
                    var bits = value.match(/([0-9]+)/gi), str;
                    if (!bits)
                        return this.optional(element) || false;
                    str = bits[1] + '/' + bits[0] + '/' + bits[2];
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(str));
                },
                "Please enter a date in the format dd/mm/yyyy"
            );
            $("form").validate({
                onkeyup: false,
                errorPlacement: function(error, element) {
                    if (element.attr("name").indexOf("DOB") >= 0) {
                        error.insertAfter("#DOB_Day");
                    } else {
                        error.insertAfter(element);
                    }
                },
                rules: {
                },
                messages: {
                },
                highlight:
                    function(element) {
                        $(element).css('border', '2px solid red');
                    },
                unhighlight:
                    function(element) {
                        $(element).css('border', '1px solid rgb(170, 170, 170)');
                    },
                errorLabelContainer: "#ErrorList",
                wrapper: "li",
            });
        }));
        //cascaded dropdownlist by knockoutjs
        function CascadingDDLViewModel() {
            var self = this;
        }
        $(document).ready($(function() {
            var objVM = new CascadingDDLViewModel();
            ko.applyBindings(objVM);
        }));
    </script>
}
